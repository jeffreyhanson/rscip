#!/bin/sh

# Display information
echo "Use 'configure'"

# Library settings
PKG_CONFIG_NAME="scip"
PKG_TEST_HEADER="<scip/scip.h>"
PKG_CFLAGS=""
PKG_LIBS="-lscip -lsoplex -lbliss -lclusol"

# Find R
: ${R_HOME=`R RHOME`}
RSCRIPT_BIN=${R_HOME}/bin/Rscript
if test -z "${R_HOME}"; then
  echo "'R_HOME' could not be found!"
  exit 1
fi

# Find dependencies
## Use pkg-config if available
pkg-config --version >/dev/null 2>&1
if [ $? -eq 0 ]; then
  echo "Found pkg-config, using it for dependency CFLAGS and LIBS"
  PKG_CONFIG="TRUE"
  DEP_CFLAGS="`pkg-config --cflags gmp blas gsl`"
  DEP_LIBS="`pkg-config --libs gmp blas gsl`"
else
  echo "Couldn't find pkg-config, guessing dependency CFLAGS and LIBS"
  PKG_CONFIG="TRUE"
  DEP_CFLAGS=""
  DEP_LIBS="-lgmp -lquadmath -lblas -lpthread -lgsl -lgslcblas -lm"
fi

# Check if variables are found
if [ "$SCIP_INCLUDE_DIR" ] || [ "$SCIP_CONFIG_DIR" ] || [ "$SCIP_LIB_DIR" ] ; then
  ## if found, then use these variables
  echo "Found SCIP_INCLUDE_DIR, SCIP_CONFIG_DIR, and/or SCIP_LIB_DIR!"
  ## set SCIP variables
  if [ $PKG_CONFIG="TRUE" ]; then
    TBB_CFLAGS="`pkg-config --cflags tbb`"
    TBB_LIBS="`pkg-config --libs tbb`"
  else
    echo "pkg-config is required when using SCIP_INCLUDE_DIR, SCIP_CONFIG_DIR, and/or SCIP_LIB_DIR"
    exit 1
  fi
# elif [ "$SCIP_HOME" ] ; then
#   ## if found, then use these variables
#   echo "Found SCIP_HOME!"
#   ## set SCIP variables
#   SCIP_INCLUDE_DIR="${SCIP_HOME}/scip/src"
#   SCIP_CONFIG_DIR="${SCIP_HOME}/build/scip"
#   SCIP_LIB_DIR="${SCIP_HOME}/build/lib"
#   SCIP_LIB_DIR2="${SCIP_HOME}/build/papilo"
#   if [ $PKG_CONFIG="TRUE" ]; then
#     TBB_CFLAGS="`pkg-config --cflags tbb`"
#     TBB_LIBS="`pkg-config --libs tbb`"
#   else
#     echo "pkg-config is required when using SCIP_HOME"
#     exit 1
#   fi
else
  ## otherwise, compile SCIP from source and set variables
  echo "Compiling SCIP from source!"
  ## determine installation directory
  R_SCIP_PKG_HOME=`pwd`
  ## install SCIP to user data directory
  cd ${R_SCIP_PKG_HOME}
  bash inst/build_scip.sh
  ## set SCIP variables
  SCIP_INCLUDE_DIR="${R_SCIP_PKG_HOME}/sciplib/scip/src"
  SCIP_CONFIG_DIR="${R_SCIP_PKG_HOME}/sciplib/build/scip"
  SCIP_LIB_DIR="${R_SCIP_PKG_HOME}/sciplib/build/lib"
  SCIP_LIB_DIR2="${R_SCIP_PKG_HOME}/sciplib/build/papilo"
  ## Find TBB paths
  TBB_INCLUDE_DIR=`"${R_HOME}/bin/Rscript" -e "cat(system.file('include', package = 'RcppParallel'))"`
  TBB_LIB_DIR=`"${R_HOME}/bin/Rscript" -e "cat(system.file('lib', package = 'RcppParallel'))"`
  if test -f "${TBB_LIB_DIR}/x64"; then
    TBB_LIB_DIR="${TBB_LIB_DIR}/x64"
  fi
  ## set TBB compiler variables
  TBB_CFLAGS="-I\"${TBB_INCLUDE_DIR}\""
  TBB_LIBS="-L\"${TBB_LIB_DIR}\" -ltbb -ltbbmalloc"
fi

# Escape spaces in file paths
SCIP_INCLUDE_DIR=$( echo "$SCIP_INCLUDE_DIR" | sed 's/ /\\ /g' )
SCIP_CONFIG_DIR=$( echo "$SCIP_CONFIG_DIR" | sed 's/ /\\ /g' )
SCIP_LIB_DIR=$( echo "$SCIP_LIB_DIR" | sed 's/ /\\ /g' )
SCIP_LIB_DIR2=$( echo "$SCIP_LIB_DIR2" | sed 's/ /\\ /g' )
TBB_CFLAGS=$( echo "$TBB_CFLAGS" | sed 's/ /\\ /g' )
TBB_LIBS=$( echo "$TBB_LIBS" | sed 's/ /\\ /g' )

# If not installing on macOS, then add quadmath library
if [ `uname` != "Darwin" ]; then
  PKG_LIBS="${PKG_LIBS} -lquadmath -lgfortran"
else
  PKG_LIBS="${PKG_LIBS} -lblas"
fi

# Set package compilation variables
PKG_CFLAGS="-I\"$SCIP_INCLUDE_DIR\" -I\"${SCIP_CONFIG_DIR}\" ${PKG_CFLAGS} ${TBB_CFLAGS} ${DEP_CFLAGS}"
PKG_LIBS="-L\"${SCIP_LIB_DIR}\" -L\"${SCIP_LIB_DIR2}\" ${PKG_LIBS} ${TBB_LIBS} ${DEP_LIBS}"

# For debugging
echo "Using PKG_CFLAGS=$PKG_CFLAGS"
echo "Using PKG_LIBS=$PKG_LIBS"

# Find compiler
CXX=$(${R_HOME}/bin/R CMD config CXX)
CXXFLAGS=$(${R_HOME}/bin/R CMD config CXXFLAGS)
CPPFLAGS=$(${R_HOME}/bin/R CMD config CPPFLAGS)

# Write to Makevars
sed -e "s|@cflags@|$PKG_CFLAGS|" -e "s|@libs@|$PKG_LIBS|" src/Makevars.in > src/Makevars

# success
exit 0
